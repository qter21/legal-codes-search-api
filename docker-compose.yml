version: '3.8'

services:
  # Elasticsearch for keyword/text search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: legal-codes-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - legal-search-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: legal-codes-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - legal-search-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB (reference - assuming external existing instance)
  # Uncomment if you want to run MongoDB locally for testing
  # mongodb:
  #   image: mongo:7.0
  #   container_name: legal-codes-mongodb
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   volumes:
  #     - mongo_data:/data/db
  #   networks:
  #     - legal-search-net

  # Search API Service (Prototype - Independent Testing)
  search-api:
    build:
      context: ./search-api
      dockerfile: Dockerfile
    container_name: legal-codes-search-api
    ports:
      - "8888:8000"  # External: 8888, Internal: 8000
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - QDRANT_URL=http://qdrant:6333
      - MONGODB_URL=mongodb://admin:legalcodes123@legal-codes-pipeline-mongodb:27017/ca_codes_db?authSource=admin
      - LOG_LEVEL=INFO
      # LLM Configuration (access host machine from container via host.docker.internal)
      - LLM_API_BASE=http://host.docker.internal:1234/v1
      - LLM_MODEL=openai/gpt-oss-120b
      - LLM_TIMEOUT=60.0
    depends_on:
      elasticsearch:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - legal-search-net
      - legal-codes-pipeline_pipeline-network
    volumes:
      - ./search-api:/app
      - ./config:/app/config
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Sync Service (runs as scheduled job)
  sync-service:
    build:
      context: ./sync-service
      dockerfile: Dockerfile
    container_name: legal-codes-sync-service
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - QDRANT_URL=http://qdrant:6333
      - MONGODB_URL=mongodb://admin:legalcodes123@legal-codes-pipeline-mongodb:27017/ca_codes_db?authSource=admin
      - MONGODB_DATABASE=ca_codes_db
      - MONGODB_COLLECTION=section_contents
      - SYNC_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - BATCH_SIZE=1000
    depends_on:
      elasticsearch:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - legal-search-net
      - legal-codes-pipeline_pipeline-network
    volumes:
      - ./sync-service:/app
      - ./config:/app/config
      - sync_logs:/app/logs

networks:
  legal-search-net:
    driver: bridge
  # Connect to existing MongoDB network
  legal-codes-pipeline_pipeline-network:
    external: true

volumes:
  es_data:
  qdrant_data:
  # mongo_data:
  sync_logs:

